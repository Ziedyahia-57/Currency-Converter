name: Update Currency Rates

on:
  schedule:
    - cron: '0 12 * * *'  # Daily at 12:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-rates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # Critical for push access

      - name: Install dependencies
        run: sudo apt-get install -y jq curl

      - name: Fetch exchange rates
        id: fetch
        run: |
          # Get raw response with error handling
          if ! curl -sSf --retry 3 --max-time 10 "https://api.exchangerate.host/live?access_key=e03fcd7972217fa94ae33a8f73f27b27" > response.json; then
            echo "::error::Failed to fetch from API"
            exit 1
          fi

          # Validate and transform response
          if ! jq -e '
            if .success == true then {
              disclaimer: "Data sourced from exchangerate.host",
              timestamp: (.date // now|todate),
              rates: .rates
            } else error("API error: \(.error.type)") end
          ' response.json > data.json; then
            echo "::error::Invalid API response"
            cat response.json
            exit 1
          fi

      - name: Commit changes
        if: always()  # Always run to report status
        run: |
          if [[ -f data.json ]] && jq -e '.rates' data.json >/dev/null; then
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add data.json
            if [ -n "$(git status --porcelain)" ]; then
              git commit -m "Update rates: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
              git push
              echo "::notice::Rates updated successfully"
            else
              echo "::notice::No rate changes detected"
            fi
          else
            echo "::error::No valid rates data to commit"
            exit 1
          fi

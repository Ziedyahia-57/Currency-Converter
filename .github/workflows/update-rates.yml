name: Update Currency Rates

on:
  schedule:
    - cron: '0 12 * * *'  # Daily at 12:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-rates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Install dependencies
        run: sudo apt-get install -y jq curl

      - name: Fetch traditional exchange rates
        id: fetch-traditional
        run: |
          # Use the most reliable free endpoint
          API_URL="https://api.exchangerate.host/latest?base=USD"
          
          echo "Fetching rates from: $API_URL"
          curl -sSf --retry 3 --max-time 10 "$API_URL" > traditional_response.json || {
            echo "::error::Failed to fetch exchange rates"
            exit 1
          }

          # Debug: Show API response
          echo "API Response:"
          cat traditional_response.json
          echo ""

          # Simple processing that works with exchangerate.host's format
          jq -e '
            {
              disclaimer: "Data sourced from exchangerate.host",
              timestamp: ((.date // now | tostring) + "T00:00:00Z"),
              base: (.base // "USD"),
              rates: ({"USD": 1} + (.rates // {}))
              }
            ' traditional_response.json > traditional_rates.json || {
              echo "::error::Failed to process exchange rates"
              echo "Problematic response:"
              cat traditional_response.json
              exit 1
            }

          echo "Successfully processed traditional rates:"
          cat traditional_rates.json

      - name: Fetch cryptocurrency rates
        id: fetch-crypto
        run: |
          curl -sSf --retry 3 --max-time 10 \
            "https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=11&page=1" > crypto_response.json || {
            echo "::error::Failed to fetch crypto rates"
            exit 1
          }

          # Get top 10 non-BTC cryptos
          jq -e '
            [.[] | select(.symbol != "btc")][0:10] |
            {
              disclaimer: "Data sourced from CoinGecko (top 10 cryptos excluding BTC)",
              timestamp: (now|todate),
              base: "USD",
              rates: reduce .[] as $coin ({}; .[($coin.symbol|ascii_upcase)] = $coin.current_price)
            }
          ' crypto_response.json > crypto_rates.json || {
            echo "::error::Failed to process crypto rates"
            exit 1
          }

      - name: Combine rates
        run: |
          jq -s '
            .[0] as $traditional | 
            .[1] as $crypto |
            {
              disclaimer: "Combined currency rates",
              timestamp: (now|todate),
              base: "USD",
              rates: ($traditional.rates + $crypto.rates),
              metadata: {
                last_updated: (now|todate),
                traditional_currencies: ($traditional.rates|length),
                cryptocurrencies: ($crypto.rates|length)
              }
            }
          ' traditional_rates.json crypto_rates.json > rates.json

          echo "Final rates:"
          cat rates.json

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add rates.json
            
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Update rates: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push
          else
            echo "No changes to commit"
          fi
